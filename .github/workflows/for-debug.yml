# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: for-debug

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PYTHON_VERSION: 3.8.15

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3.0.0

      - name: Install poetry 📚
        run: pipx install poetry

      - name: Set up Python 3.8 🐍
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "poetry"

      - name: Build and install `recipe_converters`
        run: |
          poetry build
          poetry env use ${{ env.PYTHON_VERSION }}
          poetry install

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install additional dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root

      - name: 🧪 Run Pytest
        run: |
          poetry run pytest --cov=recipeconverter

      # - name: 📶 Upload coverage data to coveralls.io
      #   run: coveralls --service=github
      - name: 📜 Build readthedocs
        run: |
          cd docs
          make html

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: 👨‍💻 Login Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🔨 Build and push
        run: |
          docker build -t ghcr.io/namtonthat/recipe-converter:latest .
          docker push ghcr.io/namtonthat/recipe-converter:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: 🚀 Deploy
        run: flyctl deploy --image ghcr.io/namtonthat/recipe-converter:latest -a recipe-converter
